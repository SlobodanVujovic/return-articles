# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - return-articles

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: npm

      - name: Run npm install, build, and test
        run: |
          npm install
          npm run build --if-present
          npm run test --if-present

      - name: Zip all files for upload
        run: zip -r --symlinks returnModule.zip ./*

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: returnArticle
          path: returnModule.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: returnArticle

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'return-articles'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: returnModule.zip

      - name: Delete zip file
        run: rm returnModule.zip

  migrate:
    runs-on: ubuntu-latest
    needs: deploy

    steps:
      - name: Install Azure CLI
        run: curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Open SSH connection on App Service
        run: az webapp create-remote-connection --subscription "Azure subscription 1" --resource-group "MsDirect" -n "return-articles" 2> sshConfig.txt

      - name: Save SSH port to SSH_PORT environment variable
        run: export SSH_PORT=$(cat sshConfig.txt | grep -o -P 'port: \d+' | grep -o -P '\d+')

      - name: Executing remote SSH commands using password
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: "127.0.0.1"
          username: "root"
          key: "Docker!"
          port: "${SSH_PORT}"
          script: export DATABASE_URL=${{ secrets.TEST_DATABASE_URL }} && cd /home/site/wwwroot/ && npx prisma migrate deploy
